{"version":3,"sources":["webpack:///webpack/bootstrap 634bac24febd0e989ffe","webpack:///./src/js/app.js"],"names":["apiKey","navigator","geolocation","console","log","addressTextBlockEl","document","querySelector","loadingEl","locationContainerEl","zipCodeBlockEl","mapEl","getCurrentPosition","position","latitude","coords","longitude","xhr","XMLHttpRequest","addEventListener","data","JSON","parse","responseText","addressComponents","results","address_components","streetNumber","long_name","streetName","short_name","city","state","zipCode","country","addressTextString","map","google","maps","Map","center","lat","lng","zoom","isNaN","innerHTML","className","open","send"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,EAAC,YAAM;AACL,OAAMA,SAAS,yCAAf;;AAEA,OAAI,CAACC,UAAUC,WAAf,EAA4B;AAC1BC,aAAQC,GAAR,CAAY,+BAAZ;AACD,IAFD,MAEO;AAAA;AACL,WAAMC,qBAAqBC,SAASC,aAAT,CAAuB,gBAAvB,CAA3B;AACA,WAAMC,YAAYF,SAASC,aAAT,CAAuB,UAAvB,CAAlB;AACA,WAAME,sBAAsBH,SAASC,aAAT,CAAuB,0BAAvB,CAA5B;AACA,WAAMG,iBAAiBJ,SAASC,aAAT,CAAuB,gBAAvB,CAAvB;AACA,WAAMI,QAAQL,SAASC,aAAT,CAAuB,MAAvB,CAAd;;AAEAN,iBAAUC,WAAV,CAAsBU,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACrD,aAAMC,WAAWD,SAASE,MAAT,CAAgBD,QAAjC;AACA,aAAME,YAAYH,SAASE,MAAT,CAAgBC,SAAlC;AACA,aAAMC,MAAM,IAAIC,cAAJ,EAAZ;AACAD,aAAIE,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AACjC,eAAMC,OAAOC,KAAKC,KAAL,CAAWL,IAAIM,YAAf,CAAb;AACA,eAAMC,oBAAoBJ,KAAKK,OAAL,CAAa,CAAb,EAAgBC,kBAA1C;AACA,eAAMC,eAAeH,kBAAkB,CAAlB,EAAqBI,SAA1C;AACA,eAAMC,aAAaL,kBAAkB,CAAlB,EAAqBM,UAAxC;AACA,eAAMC,OAAOP,kBAAkB,CAAlB,EAAqBI,SAAlC;AACA,eAAMI,QAAQR,kBAAkB,CAAlB,EAAqBM,UAAnC;AACA,eAAMG,UAAUT,kBAAkB,CAAlB,EAAqBI,SAArC;AACA,eAAMM,UAAUV,kBAAkB,CAAlB,EAAqBM,UAArC;;AAEA,eAAMK,oBAAuBR,YAAvB,SAAuCE,UAAvC,UAAsDE,IAAtD,UAA+DC,KAA/D,SAAwEC,OAAxE,SAAmFC,OAAzF;;AAEA,eAAME,MAAM,IAAIC,OAAOC,IAAP,CAAYC,GAAhB,CAAoB5B,KAApB,EAA2B;AACrC6B,qBAAQ;AACNC,oBAAK3B,QADC;AAEN4B,oBAAK1B;AAFC,cAD6B;AAKrC2B,mBAAM;AAL+B,YAA3B,CAAZ;;AASA,eAAI,CAACC,MAAMX,OAAN,CAAL,EAAqB;AACnBvB,4BAAemC,SAAf,GAA2B,EAA3B;AACAnC,4BAAemC,SAAf,GAA2BZ,OAA3B;;AAEA5B,gCAAmBwC,SAAnB,GAA+B,EAA/B;AACAxC,gCAAmBwC,SAAnB,GAA+BV,iBAA/B;;AAEA3B,uBAAUsC,SAAV,IAAuB,SAAvB;AACArC,iCAAoBqC,SAApB,GAAgC,yBAAhC;AACD;AACF,UA/BD;AAgCA7B,aAAI8B,IAAJ,CAAS,KAAT,gEAA4EjC,QAA5E,SAAwFE,SAAxF,aAAyGhB,MAAzG;AACAiB,aAAI+B,IAAJ;AACD,QAtCD;AAPK;AA8CN;AACF,EApDD,I","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 634bac24febd0e989ffe","(() => {\n  const apiKey = 'AIzaSyAJN1inz_UYBWjVZ1KEjVrsvukmLc4eqJ0';\n\n  if (!navigator.geolocation) {\n    console.log('Geolocation is not available.');\n  } else {\n    const addressTextBlockEl = document.querySelector('.address-block');\n    const loadingEl = document.querySelector('.loading');\n    const locationContainerEl = document.querySelector('.location-info-container');\n    const zipCodeBlockEl = document.querySelector('.zipcode-block');\n    const mapEl = document.querySelector('.map');\n\n    navigator.geolocation.getCurrentPosition((position) => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      const xhr = new XMLHttpRequest();\n      xhr.addEventListener('load', () => {\n        const data = JSON.parse(xhr.responseText);\n        const addressComponents = data.results[0].address_components;\n        const streetNumber = addressComponents[0].long_name;\n        const streetName = addressComponents[1].short_name;\n        const city = addressComponents[2].long_name;\n        const state = addressComponents[4].short_name;\n        const zipCode = addressComponents[6].long_name;\n        const country = addressComponents[5].short_name;\n\n        const addressTextString = `${streetNumber} ${streetName}, ${city}, ${state} ${zipCode} ${country}`;\n\n        const map = new google.maps.Map(mapEl, {\n          center: {\n            lat: latitude,\n            lng: longitude,\n          },\n          zoom: 18,\n        });\n\n\n        if (!isNaN(zipCode)) {\n          zipCodeBlockEl.innerHTML = '';\n          zipCodeBlockEl.innerHTML = zipCode;\n\n          addressTextBlockEl.innerHTML = '';\n          addressTextBlockEl.innerHTML = addressTextString;\n\n          loadingEl.className += ' hidden';\n          locationContainerEl.className = 'location-info-container';\n        }\n      });\n      xhr.open('GET', `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`);\n      xhr.send();\n    });\n  }\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js"],"sourceRoot":""}